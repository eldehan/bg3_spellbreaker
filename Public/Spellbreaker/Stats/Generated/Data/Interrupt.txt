new entry "Spellbreaker_Interrupt_Counterspell"
type "InterruptData"
data "DisplayName" "h3bf20f0fge7c6g41cdg8d9bg1623ab403b60"
data "Description" "h71319fe0gc3a5g4854gad6fgb960bb295d9d"
data "Icon" "Spellbreaker_Skill_Counterspell"
data "InterruptContext" "OnSpellCast"
data "InterruptContextScope" "Nearby"
data "Container" "YesNoDecision"
data "Conditions" "not HasSpellCastBlocked(context.Observer) and IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and Enemy(context.Source, context.Observer) and IsSpell() and not Uninterruptible() and not HasStringInSpellRoll('WeaponAttack') and not AnyEntityIsItem()"
data "Roll" "SpellbreakerTryCounterspellHigherLevel(1)"
data "Success" "Counterspell();UseSpell(OBSERVER_SOURCE,Target_Counterspell_Success,true,true,true);ApplyStatus(SWAP,SPELLBREAKER_ANNULMENT_ANTIMAGIC,50,1);"
data "Failure" "UseSpell(OBSERVER_SOURCE,Target_Counterspell_Failure,true,true,true)"
data "Cost" "ReactionActionPoint:1;SpellbaneDie:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "Stack" "Spellbreaker_Interrupt_Counterspell"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "Spellbreaker_Interrupt_MentalFortress"
type "InterruptData"
data "DisplayName" "hfcf30291g844dg4cedga78dgb0f5beca240b"
data "Description" "ha735cf4bg2e11g4a72g9055g620102f45a60"
data "DescriptionParams" "LevelMapValue(SpellbaneDie)"
data "Icon" "Spellbreaker_Skill_MentalFortress"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and Self(context.Target, context.Observer) and HasInterruptedSavingThrow() and (HasSavingThrowWithAbility(Ability.Intelligence) or HasSavingThrowWithAbility(Ability.Charisma) or HasSavingThrowWithAbility(Ability.Wisdom)) and IsFlatValueInterruptInteresting(8) and not AnyEntityIsItem()"
data "Properties" "AdjustRoll(LevelMapValue(SpellbaneDie));"
data "Cost" "ReactionActionPoint:1;SpellbaneDie:1"
data "Stack" "Spellbreaker_MentalFortress"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "Spellbreaker_Interrupt_SpellParry"
type "InterruptData"
data "DisplayName" "hbce9ad05g3237g4cf6g85dcg125f209fc1e4"
data "Description" "h736a25a9g5858g434dgbf2dg419aba42df76"
data "DescriptionParams" "LevelMapValue(SpellbaneDie)"
data "Icon" "Spellbreaker_Skill_SpellParry"
data "InterruptContext" "OnPreDamage"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and IsSpell() and Self(context.Target, context.Observer) and not Self(context.Source,context.Observer) and not AnyEntityIsItem()"
data "Properties" "AdjustRoll(-LevelMapValue(SpellbaneDie)); IF(MainDamageTypeIs(DamageType.Poison)):ApplyStatus(OBSERVER_TARGET, SPELLBREAKER_SPELL_PARRY_POISON_DAMAGE, 100, 2); IF(MainDamageTypeIs(DamageType.Radiant)):ApplyStatus(OBSERVER_TARGET, SPELLBREAKER_SPELL_PARRY_RADIANT_DAMAGE, 100, 2); IF(MainDamageTypeIs(DamageType.Force)):ApplyStatus(OBSERVER_TARGET, SPELLBREAKER_SPELL_PARRY_FORCE_DAMAGE, 100, 2); IF(MainDamageTypeIs(DamageType.Necrotic)):ApplyStatus(OBSERVER_TARGET, SPELLBREAKER_SPELL_PARRY_NECROTIC_DAMAGE, 100, 2); IF(MainDamageTypeIs(DamageType.Psychic)):ApplyStatus(OBSERVER_TARGET, SPELLBREAKER_SPELL_PARRY_PSYCHIC_DAMAGE, 100, 2); IF(MainDamageTypeIs(DamageType.Acid)):ApplyStatus(OBSERVER_TARGET, SPELLBREAKER_SPELL_PARRY_ACID_DAMAGE, 100, 2); IF(MainDamageTypeIs(DamageType.Cold)):ApplyStatus(OBSERVER_TARGET, SPELLBREAKER_SPELL_PARRY_COLD_DAMAGE, 100, 2); IF(MainDamageTypeIs(DamageType.Fire)):ApplyStatus(OBSERVER_TARGET, SPELLBREAKER_SPELL_PARRY_FIRE_DAMAGE, 100, 2); IF(MainDamageTypeIs(DamageType.Lightning)):ApplyStatus(OBSERVER_TARGET, SPELLBREAKER_SPELL_PARRY_LIGHTNING_DAMAGE, 100, 2); IF(MainDamageTypeIs(DamageType.Thunder)):ApplyStatus(OBSERVER_TARGET, SPELLBREAKER_SPELL_PARRY_THUNDER_DAMAGE, 100, 2); UseSpell(OBSERVER_TARGET,Spellbreaker_Target_SpellParry_Interrupt,true,true,true)"
data "Cost" "ReactionActionPoint:1;SpellbaneDie:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"